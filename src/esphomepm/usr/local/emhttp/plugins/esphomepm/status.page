Menu="Dashboard"
Icon="esphomepm.png"
---
<style type="text/css">
    <?php
        require_once("/usr/local/emhttp/plugins/esphomepm/data-handler.php");
        $config = load_plugin_config();
        $sortnr = $N+2
    ?>
    #dash_esphomepm_settings i, #esphomepm_view {margin-top:0px;}
    
    /* Dashboard widget styling */
    .esphomepm-energy-power, .esphomepm-costs_today, .esphomepm-costs_month {
        font-weight: bold;
        color: #F57C00;
    }
    
    .esphomepm_view {
        display: none;
    }
    
    .fa-bolt {
        color: #F57C00;
        margin-right: 5px;
    }
    
    .section {
        display: inline-block;
        margin-left: 10px;
    }
</style>
<table id='db-box1' class='dash_esphomepm dashboard box1'>
    <thead sort='<?=$sortnr?>'>
	    <tr class='hidden'>
		    <td></td>
		    <td colspan='3'></td>
		<td></td>
	    </tr>
    </thead>
    <tbody sort='<?=$sortnr?>' class='sortable'>
	    <tr>
		    <td></td>
		    <td colspan='3' class='next'>
                <i class='fa fa-bolt'></i>
                <div class='section'>_(ESPHome Power Monitor)_<br><span id='load'>_(Usage)_: <span class='esphomepm-energy-power'>0</span> W</span></div>
                <i class='fa fa-fw chevron' id='esphomepm_view' onclick='toggleChevron("esphomepm_view",0)'></i>
                <a href='/Settings/ESPHomePMSettings' title="_(Go to ESPHome Power Monitor settings)_"><i class='fa fa-fw fa-cog chevron'></i></a>
            </td>
            <td></td>

            <tr class="esphomepm_view">
                <td></td>
                <td>Today:</td>
                <td><span class="esphomepm-energy-today"></span> kWh</td>
                <td><span class="esphomepm-costs_today"></span> <span class="esphomepm-costs_unit"></span></td>
                <td></td>
            </tr>
            <tr class="esphomepm_view">
                <td></td>
                <td>Month:</td>
                <td><span class="esphomepm-energy-month"></span> kWh</td>
                <td><span class="esphomepm-costs_month"></span> <span class="esphomepm-costs_unit"></span></td>
                <td></td>
            </tr>
        </tr>
    </tbody>
</table>
<script>
const esphomepm_status = () => {
    $.getJSON("/plugins/esphomepm/status.php", (data) => {
        if (data) {
            // Current power
            if (data.power !== undefined) { 
                $(".esphomepm-energy-power").html(parseFloat(data.power).toFixed(2)); 
            } else {
                $(".esphomepm-energy-power").html('N/A');
            }
            
            // Today's energy
            if (data.today_energy !== undefined) {
                $(".esphomepm-energy-today").html(parseFloat(data.today_energy).toFixed(3));
            } else {
                $(".esphomepm-energy-today").html('N/A');
            }
            
            // Today's cost
            if (data.daily_cost !== undefined) {
                $(".esphomepm-costs_today").html(parseFloat(data.daily_cost).toFixed(2));
            } else if (data.costs_price !== undefined && data.today_energy !== undefined) {
                // Fallback calculation if daily_cost not provided
                $(".esphomepm-costs_today").html((Number.parseFloat(data.costs_price) * Number.parseFloat(data.today_energy)).toFixed(2));
            } else {
                $(".esphomepm-costs_today").html('N/A');
            }
            
            // Monthly energy and cost
            if (data.current_month_energy_total !== undefined) {
                $(".esphomepm-energy-month").html(parseFloat(data.current_month_energy_total).toFixed(3));
            } else {
                $(".esphomepm-energy-month").html('N/A');
            }
            
            if (data.current_month_cost_total !== undefined) {
                $(".esphomepm-costs_month").html(parseFloat(data.current_month_cost_total).toFixed(2));
            } else if (data.monthly_cost_est !== undefined) {
                // Fallback to estimated monthly cost
                $(".esphomepm-costs_month").html(parseFloat(data.monthly_cost_est).toFixed(2));
            } else {
                $(".esphomepm-costs_month").html('N/A');
            }
            
            // Cost unit
            if (data.costs_unit !== undefined) {
                $(".esphomepm-costs_unit").html(data.costs_unit);
            } else {
                $(".esphomepm-costs_unit").html('');
            }
        }
    });
};

$(document).ready(function() {
    // Initial status update
    esphomepm_status();
    
    // Set up refresh interval
    setInterval(esphomepm_status, 10000); // Hardcoded to 10 seconds
    
    // Initialize toggle view state
    toggleView('esphomepm_view', true);
    
    // Initialize sorting
    sortTable($('#db-box1'), $.cookie('db-box1'));
});
</script>