Menu="Dashboard:4"
Title="ESPHome Power Monitor"
Icon="bolt"
---
<?php
$docroot = $docroot ?? $_SERVER['DOCUMENT_ROOT'] ?: '/usr/local/emhttp';
require_once("$docroot/plugins/esphomepm/include/functions.php");
$config = esphomepm_load_config();
$costs_unit = isset($config['COSTS_UNIT']) ? $config['COSTS_UNIT'] : "GBP";

// Define the dashboard widget
$plugin = "esphomepm";
$cols = "2";
$bgcolor = "#F57C00";
$fgcolor = "#FFFFFF";
$title = "ESPHome Power Monitor";
$icon = "bolt";

// Create the dashboard widget
$dash_widget = "\n";
$dash_widget .= "<table class='$plugin dashboard'><thead><tr><td></td>\n";
$dash_widget .= "<td colspan='$cols'><span class='icon'><i class='fa fa-$icon' style='color:$fgcolor;background-color:$bgcolor;'></i></span><span class='title'>$title</span>\n";
$dash_widget .= "<span class='title'><span class='esphomepm-current-power'>0</span> W</span>\n";
$dash_widget .= "<a href='/Settings/ESPHomePMSettings' title='Settings'><i class='fa fa-fw fa-cog control'></i></a>\n";
$dash_widget .= "</td></tr></thead>\n";
$dash_widget .= "<tbody>\n";
$dash_widget .= "<tr><td></td>\n";
$dash_widget .= "<td>Daily Power: <span class='esphomepm-energy-today'>0.00</span> kWh</td>\n";
$dash_widget .= "<td>Daily Cost: <span class='esphomepm-costs_today'>0.00</span> $costs_unit</td>\n";
$dash_widget .= "</tr>\n";
$dash_widget .= "<tr><td></td>\n";
$dash_widget .= "<td>Monthly Power: <span class='esphomepm-energy-month'>0.00</span> kWh</td>\n";
$dash_widget .= "<td>Monthly Cost: <span class='esphomepm-costs_month'>0.00</span> $costs_unit</td>\n";
$dash_widget .= "</tr>\n";
$dash_widget .= "<tr><td></td>\n";
$dash_widget .= "<td>Total Power: <span class='esphomepm-energy-total'>0.00</span> kWh</td>\n";
$dash_widget .= "<td>Total Cost: <span class='esphomepm-costs_total'>0.00</span> $costs_unit</td>\n";
$dash_widget .= "</tr>\n";
$dash_widget .= "<tr><td></td>\n";
$dash_widget .= "<td colspan='$cols'>Average Daily Power: <span class='esphomepm-avg-power'>0</span> W</td>\n";
$dash_widget .= "</tr>\n";
$dash_widget .= "</tbody></table>\n";

// Output the dashboard widget
echo $dash_widget;
?>

<style>
.esphomepm-current-power, .esphomepm-costs_today, .esphomepm-costs_month, .esphomepm-costs_total {
    font-weight: bold;
    color: #F57C00;
}
</style>

<script>
// Update ESPHome Power Monitor dashboard widget
function updateESPHomePMStatus() {
    $.getJSON('/plugins/esphomepm/status.php', function(data) {
        if (!data) return;
        
        // Update current power
        updateValue('.esphomepm-current-power', data.power, 2);
        
        // Calculate average daily power if possible
        if (data.today_energy !== undefined) {
            // Get hours passed in the day
            const now = new Date();
            const hoursPassed = now.getHours() + (now.getMinutes() / 60);
            if (hoursPassed > 0) {
                // Calculate average power in watts (kWh -> W conversion)
                const avgPower = (data.today_energy * 1000) / hoursPassed;
                updateValue('.esphomepm-avg-power', avgPower, 0);
            } else {
                updateValue('.esphomepm-avg-power', 0, 0);
            }
        } else {
            updateValue('.esphomepm-avg-power', 0, 0);
        }
        
        // Energy values
        updateValue('.esphomepm-energy-today', data.today_energy, 3);
        updateValue('.esphomepm-energy-month', data.current_month_energy_total, 3);
        updateValue('.esphomepm-energy-total', data.overall_total_energy, 3);
        
        // Cost values
        updateValue('.esphomepm-costs_today', data.daily_cost, 2);
        updateValue('.esphomepm-costs_month', data.current_month_cost_total || data.monthly_cost_est, 2);
        updateValue('.esphomepm-costs_total', data.overall_total_cost, 2);
    });
}

// Helper function to update values with proper formatting
function updateValue(selector, value, decimals) {
    if (value !== undefined && value !== null) {
        $(selector).html(parseFloat(value).toFixed(decimals));
    } else {
        $(selector).html('0.00');
    }
}

// Initialize the dashboard widget
$(function() {
    // Initial update
    updateESPHomePMStatus();
    
    // Set up automatic refresh every 10 seconds
    setInterval(updateESPHomePMStatus, 10000);
});
</script>